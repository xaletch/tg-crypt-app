{"version":3,"file":"index.cjs","sources":["../../src/index.ts"],"sourcesContent":["import { Plugin } from 'vite'\nimport { join, normalize, isAbsolute } from 'path'\nimport { type Config, getConfig, generator } from '@tanstack/router-generator'\n\nconst CONFIG_FILE_NAME = 'tsr.config.json'\n\nexport function TanStackRouterVite(inlineConfig: Partial<Config> = {}): Plugin {\n  const ROOT: string = process.cwd()\n  let userConfig: Config\n\n  const generate = async () => {\n    try {\n      await generator(userConfig)\n    } catch (err) {\n      console.error(err)\n      console.info()\n    }\n  }\n\n  return {\n    name: 'vite-plugin-tanstack-router',\n    configResolved: async () => {\n      userConfig = await getConfig(inlineConfig, ROOT)\n      await generate()\n    },\n    handleHotUpdate: async ({ file }) => {\n      const filePath = normalize(file)\n      if (filePath === join(ROOT, CONFIG_FILE_NAME)) {\n        userConfig = await getConfig(inlineConfig, ROOT)\n        return\n      }\n      const routesDirectoryPath = isAbsolute(userConfig.routesDirectory)\n        ? userConfig.routesDirectory\n        : join(ROOT, userConfig.routesDirectory)\n      if (filePath.startsWith(routesDirectoryPath)) {\n        await generate()\n      }\n    },\n  }\n}\n"],"names":["generator","getConfig","normalize","join","isAbsolute"],"mappings":";;;;AAIA,MAAM,mBAAmB;AAET,SAAA,mBAAmB,eAAgC,IAAY;AACvE,QAAA,OAAe,QAAQ;AACzB,MAAA;AAEJ,QAAM,WAAW,YAAY;AACvB,QAAA;AACF,YAAMA,gBAAAA,UAAU,UAAU;AAAA,aACnB,KAAK;AACZ,cAAQ,MAAM,GAAG;AACjB,cAAQ,KAAK;AAAA,IACf;AAAA,EAAA;AAGK,SAAA;AAAA,IACL,MAAM;AAAA,IACN,gBAAgB,YAAY;AACb,mBAAA,MAAMC,gBAAAA,UAAU,cAAc,IAAI;AAC/C,YAAM,SAAS;AAAA,IACjB;AAAA,IACA,iBAAiB,OAAO,EAAE,WAAW;AAC7B,YAAA,WAAWC,eAAU,IAAI;AAC/B,UAAI,aAAaC,KAAAA,KAAK,MAAM,gBAAgB,GAAG;AAChC,qBAAA,MAAMF,gBAAAA,UAAU,cAAc,IAAI;AAC/C;AAAA,MACF;AACM,YAAA,sBAAsBG,KAAAA,WAAW,WAAW,eAAe,IAC7D,WAAW,kBACXD,UAAK,MAAM,WAAW,eAAe;AACrC,UAAA,SAAS,WAAW,mBAAmB,GAAG;AAC5C,cAAM,SAAS;AAAA,MACjB;AAAA,IACF;AAAA,EAAA;AAEJ;;"}