import { normalize, join, isAbsolute } from "path";
import { getConfig, generator } from "@tanstack/router-generator";
const CONFIG_FILE_NAME = "tsr.config.json";
function TanStackRouterVite(inlineConfig = {}) {
  const ROOT = process.cwd();
  let userConfig;
  const generate = async () => {
    try {
      await generator(userConfig);
    } catch (err) {
      console.error(err);
      console.info();
    }
  };
  return {
    name: "vite-plugin-tanstack-router",
    configResolved: async () => {
      userConfig = await getConfig(inlineConfig, ROOT);
      await generate();
    },
    handleHotUpdate: async ({ file }) => {
      const filePath = normalize(file);
      if (filePath === join(ROOT, CONFIG_FILE_NAME)) {
        userConfig = await getConfig(inlineConfig, ROOT);
        return;
      }
      const routesDirectoryPath = isAbsolute(userConfig.routesDirectory) ? userConfig.routesDirectory : join(ROOT, userConfig.routesDirectory);
      if (filePath.startsWith(routesDirectoryPath)) {
        await generate();
      }
    }
  };
}
export {
  TanStackRouterVite
};
//# sourceMappingURL=index.js.map
